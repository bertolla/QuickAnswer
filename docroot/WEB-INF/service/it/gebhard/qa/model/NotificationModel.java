/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package it.gebhard.qa.model;

import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the Notification service. Represents a row in the &quot;QuickAnswer_Notification&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link it.gebhard.qa.model.impl.NotificationModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link it.gebhard.qa.model.impl.NotificationImpl}.
 * </p>
 *
 * @author Philipp Gebhard
 * @see Notification
 * @see it.gebhard.qa.model.impl.NotificationImpl
 * @see it.gebhard.qa.model.impl.NotificationModelImpl
 * @generated
 */
public interface NotificationModel extends BaseModel<Notification> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a Notification model instance should use the {@link Notification} interface instead.
	 */

	/**
	 * Returns the primary key of this Notification.
	 *
	 * @return the primary key of this Notification
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this Notification.
	 *
	 * @param primaryKey the primary key of this Notification
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the notification ID of this Notification.
	 *
	 * @return the notification ID of this Notification
	 */
	public long getNotificationId();

	/**
	 * Sets the notification ID of this Notification.
	 *
	 * @param notificationId the notification ID of this Notification
	 */
	public void setNotificationId(long notificationId);

	/**
	 * Returns the question ID of this Notification.
	 *
	 * @return the question ID of this Notification
	 */
	public long getQuestionId();

	/**
	 * Sets the question ID of this Notification.
	 *
	 * @param questionId the question ID of this Notification
	 */
	public void setQuestionId(long questionId);

	/**
	 * Returns the answer ID of this Notification.
	 *
	 * @return the answer ID of this Notification
	 */
	public long getAnswerId();

	/**
	 * Sets the answer ID of this Notification.
	 *
	 * @param answerId the answer ID of this Notification
	 */
	public void setAnswerId(long answerId);

	/**
	 * Returns the user ID of this Notification.
	 *
	 * @return the user ID of this Notification
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this Notification.
	 *
	 * @param userId the user ID of this Notification
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this Notification.
	 *
	 * @return the user uuid of this Notification
	 * @throws SystemException if a system exception occurred
	 */
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this Notification.
	 *
	 * @param userUuid the user uuid of this Notification
	 */
	public void setUserUuid(String userUuid);

	public boolean isNew();

	public void setNew(boolean n);

	public boolean isCachedModel();

	public void setCachedModel(boolean cachedModel);

	public boolean isEscapedModel();

	public Serializable getPrimaryKeyObj();

	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	public ExpandoBridge getExpandoBridge();

	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	public Object clone();

	public int compareTo(Notification notification);

	public int hashCode();

	public CacheModel<Notification> toCacheModel();

	public Notification toEscapedModel();

	public String toString();

	public String toXmlString();
}