/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package it.gebhard.qa.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the Question service. Represents a row in the &quot;QuickAnswer_Question&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link it.gebhard.qa.model.impl.QuestionModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link it.gebhard.qa.model.impl.QuestionImpl}.
 * </p>
 *
 * @author Philipp Gebhard
 * @see Question
 * @see it.gebhard.qa.model.impl.QuestionImpl
 * @see it.gebhard.qa.model.impl.QuestionModelImpl
 * @generated
 */
public interface QuestionModel extends BaseModel<Question> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a Question model instance should use the {@link Question} interface instead.
	 */

	/**
	 * Returns the primary key of this Question.
	 *
	 * @return the primary key of this Question
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this Question.
	 *
	 * @param primaryKey the primary key of this Question
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the question ID of this Question.
	 *
	 * @return the question ID of this Question
	 */
	public long getQuestionId();

	/**
	 * Sets the question ID of this Question.
	 *
	 * @param questionId the question ID of this Question
	 */
	public void setQuestionId(long questionId);

	/**
	 * Returns the user ID of this Question.
	 *
	 * @return the user ID of this Question
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this Question.
	 *
	 * @param userId the user ID of this Question
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this Question.
	 *
	 * @return the user uuid of this Question
	 * @throws SystemException if a system exception occurred
	 */
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this Question.
	 *
	 * @param userUuid the user uuid of this Question
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the guest user ID of this Question.
	 *
	 * @return the guest user ID of this Question
	 */
	public long getGuestUserId();

	/**
	 * Sets the guest user ID of this Question.
	 *
	 * @param guestUserId the guest user ID of this Question
	 */
	public void setGuestUserId(long guestUserId);

	/**
	 * Returns the guest user uuid of this Question.
	 *
	 * @return the guest user uuid of this Question
	 * @throws SystemException if a system exception occurred
	 */
	public String getGuestUserUuid() throws SystemException;

	/**
	 * Sets the guest user uuid of this Question.
	 *
	 * @param guestUserUuid the guest user uuid of this Question
	 */
	public void setGuestUserUuid(String guestUserUuid);

	/**
	 * Returns the title of this Question.
	 *
	 * @return the title of this Question
	 */
	@AutoEscape
	public String getTitle();

	/**
	 * Sets the title of this Question.
	 *
	 * @param title the title of this Question
	 */
	public void setTitle(String title);

	/**
	 * Returns the message of this Question.
	 *
	 * @return the message of this Question
	 */
	@AutoEscape
	public String getMessage();

	/**
	 * Sets the message of this Question.
	 *
	 * @param message the message of this Question
	 */
	public void setMessage(String message);

	/**
	 * Returns the view counter of this Question.
	 *
	 * @return the view counter of this Question
	 */
	public long getViewCounter();

	/**
	 * Sets the view counter of this Question.
	 *
	 * @param viewCounter the view counter of this Question
	 */
	public void setViewCounter(long viewCounter);

	/**
	 * Returns the created of this Question.
	 *
	 * @return the created of this Question
	 */
	public Date getCreated();

	/**
	 * Sets the created of this Question.
	 *
	 * @param created the created of this Question
	 */
	public void setCreated(Date created);

	/**
	 * Returns the modified of this Question.
	 *
	 * @return the modified of this Question
	 */
	public Date getModified();

	/**
	 * Sets the modified of this Question.
	 *
	 * @param modified the modified of this Question
	 */
	public void setModified(Date modified);

	public boolean isNew();

	public void setNew(boolean n);

	public boolean isCachedModel();

	public void setCachedModel(boolean cachedModel);

	public boolean isEscapedModel();

	public Serializable getPrimaryKeyObj();

	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	public ExpandoBridge getExpandoBridge();

	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	public Object clone();

	public int compareTo(Question question);

	public int hashCode();

	public CacheModel<Question> toCacheModel();

	public Question toEscapedModel();

	public String toString();

	public String toXmlString();
}